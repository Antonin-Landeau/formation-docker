version: '3.8'
services:
  api:
    container_name: formation-docker-fastapi
    image: formation-backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - database
    ports:
      - 8000:8000
    volumes:
      - ./backend/app:/app/app
    networks:
      - formation-docker-backend
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.fd-api.rule=Host(`formation-docker-backend.antonin-landeau.com`)"
      - "traefik.http.routers.fd-api.entrypoints=websecure" 
      - "traefik.http.routers.fd-api.tls.certresolver=letsencrypt"
  database:
    container_name: formation-docker-database
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - formation-docker-backend

  frontend:
    container_name: formation-docker-react
    image: formation-frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 5173:5173
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.fd-frontend.rule=Host(`formation-docker-frontend.antonin-landeau.com`)"
      - "traefik.http.routers.fd-frontend.entrypoints=websecure" 
      - "traefik.http.routers.fd-frontend.tls.certresolver=letsencrypt"


volumes:
  db_data:

networks:
  proxy:
    external: true
  formation-docker-backend:
